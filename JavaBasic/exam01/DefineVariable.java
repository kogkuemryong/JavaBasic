// 변수의 이해와 사용 방법 및 활용(Variable) 

package exam01;

public class DefineVariable {
	public static void main(String[] args) {
		// 5489 + 9587 = ? 1) 데이터를 메모리에 저장되도록 요청해야 한다. 
        // 메모리가 저장되려면 어떻게 해야 할까?  메모리 공간 마다 번호가 붙어 있어서 거기에 저장되도록 한다. 		
		// 처음 설계 되었을 때, 메모리의 크기가 작다 하더라도 126byte(1024 * 126)만큼의 방을 저장 가능하다.
		// 16G = 1024*1024*1024*16 의 공간을 가지고 있다. 어떤 공간에 어떤 내용이 저장 되었는지 알지 못한다. 
		// 효율적으로 수행할 수 있도록 하기 위해서 나온 것이 프로그래밍 언어이다.(오류를 내준다, 할당 공간을 만들어준다)
		// 어떻게 기억하도록 만들고 처리할까? 
		
		// System.out.println(5489+9527); 
		// 5489 + 9587 =
		//1) 데이터를 메모리에 저장되도록 요청해야 한다. 
		// int : 메모리 공간을 할당해달라는 요청( key ward(예약어) ) 자바가 메모리를 관리해주고 있다
		// 메모리중에서 사용하고 있지 않은 장소를 할당해준다. 할당 받은 공간에 기억하기 쉬운 이름으로 붙여준다. 
		
		
		// (1) 변수 선언 (메모리 할당 요청) -- 자바에게 요청 (할당 공간들을 자바가 관리) -- 초기화 라고 한다. 
		int data1; //data1로 이름을 붙여주었다.  -- 이름을 붙인 공간을 변수라고 한다!! 메모리 공간이 변수다!! 
		int data2; //data2로 이름을 붙여주었다. 같은 이름으로 붙으면x 중복(x) why? 어떤 변수인지 판단할 수 없기 때문이다. 
		int result; // 선언하는 위치는 한군데에 모아서 하는 것이 일반적이다. (선언 이후 사용 가능) 
		// 할당된 메모리 공간이고 내가 기억하기 좋은 이름으로 저장한다. 
		// 변수를 만드는 이유, 할당(저장)한 이유: 데이터를 저장하고 필요할 때 사용하기 위함이다. 
		
		// (2) 메모리 접근 방법 ( 데이터 저장 ) 
		data1 = 5489;//메모리에 접근 할때는 내가 지정해준 이름으로 접근한다. 저장 하는 것은 (=)을 사용한다. 
		// data1에 5489를 저장해달라는 의미이다. (=) 저장연상자 or 대입연상자라고 칭한다. < 변수 = 저장할 값; >
		data2 = 9587; 
		
		
		// (3) 메모리 접근 방법 (데이터 읽어오기) - 변수의 이름으로 불러온다. 
        System.out.println(data1); // 저장되어 있는 변수를 가져오려는 이유는 담겨져 있는 데이터를 확인, 또는 추가적 실행을 하기 위함이다. 
		System.out.println(data2); // 저장되어 있는 변수를 읽어준다(출력) 
		
		//data1 + data2; // error : 메모리에서 data1,data2를 읽어 와서 연산까지 했는데 그 다음 수행할 명령어가 없다. 
		System.out.println(data1 + data2); // 위의 값을 출력해달라고 요청해서 값을 가져왔지만 값으로 추가적으로 무엇인가를 수행할 수 없다. 
		//int result;  data1 + data2 의 값을 result 라는 이름으로 변수를 만들어준다. 
		result = data1 + data2; // 우선 뒤의 덧셈을 수행하고 나서 변수에 값을 넣어준다. 
		
		System.out.println(result); // result 출력
		
        //변수 수행의 특징 : 얼마든지 변수에 새로운 값을 넣을 수 있다.(값이 변할 수 있다는 특징 때문에 변수라는 이름을 사용한다) 
		//프로그래밍에서 변수는 저장공간을  할당 하는 것이고, 변할 수 있다는 특징을 가지고 있는 것이다.
		data1 = 6000; // 변수 재사용 
		System.out.println(data1 + data2);
		
	}
}

// 프로그래밍의 주 목적: 컴퓨터가 어려운 계산을 해주고, 결과값을 저장해주기 때문에 사용한다. 
// 변수의 특징 때문에 알고리즘이 가능하고, 결과를 가장 빠르게 피드백 받을 수 있고, 피드백 받은 것을 재활용할 수 있다. 
// 변수의 개념을 모르다고 한다면 모순이 될 수 있다!!! 